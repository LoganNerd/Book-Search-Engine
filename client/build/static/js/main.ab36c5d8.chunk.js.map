{"version":3,"sources":["utils/mutations.js","utils/localStorage.js","utils/auth.js","pages/SearchBooks.js","utils/queries.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","SAVE_BOOK","_templateObject3","REMOVE_BOOK","_templateObject4","removeBookId","bookId","savedBookIds","localStorage","getItem","JSON","parse","updatedSavedBookIds","filter","savedBookId","setItem","stringify","AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","idToken","window","location","assign","removeItem","SearchBooks","_useState","useState","_useState2","_slicedToArray","searchedBooks","setSearchedBooks","_useState3","_useState4","searchInput","setSearchInput","_useState5","_useState6","setSavedBookIds","_useMutation","useMutation","_useMutation2","saveBook","error","useEffect","bookIdArr","length","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","_yield$response$json","items","bookData","wrap","_context","prev","next","preventDefault","abrupt","fetch","concat","sent","ok","Error","json","map","book","_book$volumeInfo$imag","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","t0","console","stop","_x","apply","arguments","handleSaveBook","_ref2","_callee2","bookToSave","_yield$saveBook","_context2","find","Auth","loggedIn","variables","_objectSpread","data","log","_toConsumableArray","_x2","_jsxs","_Fragment","children","_jsx","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","border","Img","src","alt","Body","Title","Text","disabled","some","savedId","onClick","QUERY_ME","SavedBooks","_userData$savedBooks","_userData$savedBooks2","_useQuery","useQuery","loading","removeBook","userData","me","handleDeleteBook","_yield$removeBook","username","savedBooks","SignupForm","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","addUser","handleInputChange","_event$target","_defineProperty","_yield$addUser","currentTarget","checkValidity","stopPropagation","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","_yield$login","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","SignUpForm","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab36c5d8.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String, $password: String) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String, $email: String, $password: String) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SAVE_BOOK = gql`\r\n  mutation saveBook($bookData: bookInput) {\r\n    saveBook(bookData: $bookData) {\r\n      _id\r\n      username\r\n      email\r\n      savedBooks {\r\n        bookId\r\n        authors\r\n        image\r\n        description\r\n        title\r\n        link\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_BOOK = gql`\r\n  mutation removeBook($bookId: ID) {\r\n    removeBook(bookId: $bookId) {\r\n      _id\r\n      username\r\n      email\r\n      savedBooks {\r\n        bookId\r\n        authors\r\n        image\r\n        description\r\n        title\r\n        link\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export const getSavedBookIds = () => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : [];\n\n  return savedBookIds;\n};\n\nexport const saveBookIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_books');\n  }\n};\n\nexport const removeBookId = (bookId) => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : null;\n\n  if (!savedBookIds) {\n    return false;\n  }\n\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\n\n  return true;\n};\n","// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { SAVE_BOOK } from \"../utils/mutations\";\nimport { saveBookIds, getSavedBookIds } from \"../utils/localStorage\";\n\nimport Auth from \"../utils/auth\";\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await fetch(\n        `https://www.googleapis.com/books/v1/volumes?q=${searchInput}`\n      );\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || [\"No author to display\"],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || \"\",\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await saveBook({\n        variables: { bookData: { ...bookToSave } },\n      });\n      console.log(savedBookIds);\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for a book\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : \"Search for a book to begin\"}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some(\n                        (savedId) => savedId === book.bookId\n                      )}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSaveBook(book.bookId)}\n                    >\n                      {savedBookIds?.some((savedId) => savedId === book.bookId)\n                        ? \"Book Already Saved!\"\n                        : \"Save This Book!\"}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const QUERY_ME = gql`\r\n  {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n      savedBooks {\r\n        bookId\r\n        authors\r\n        image\r\n        description\r\n        title\r\n        link\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from \"react-bootstrap\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_ME } from \"../utils/queries\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\nimport { removeBookId } from \"../utils/localStorage\";\n\nimport Auth from \"../utils/auth\";\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(QUERY_ME);\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n\n  const userData = data?.me || {};\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await removeBook({\n        variables: { bookId },\n      });\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing {userData.username}'s books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks?.length\n            ? `Viewing ${userData.savedBooks.length} saved ${\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\n              }:`\n            : \"You have no saved books!\"}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks?.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// import { createUser } from '../utils/API';\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [addUser] = useMutation(ADD_USER);\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({ variables: { ...userFormData } });\n\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// import { loginUser } from '../utils/API';\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [login] = useMutation(LOGIN_USER);\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({ variables: { ...userFormData } });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Google Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar' className='d-flex flex-row-reverse'>\n            <Nav className='ml-auto d-flex'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport SearchBooks from \"./pages/SearchBooks\";\nimport SavedBooks from \"./pages/SavedBooks\";\nimport Navbar from \"./components/Navbar\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Routes>\n            <Route path=\"/\" element={<SearchBooks />} />\n            <Route path=\"/saved\" element={<SavedBooks />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"display-2\">Wrong page!</h1>}\n            />\n          </Routes>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}